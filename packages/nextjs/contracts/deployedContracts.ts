/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    PolyBetFactory: {
      address: "0x09635F643e140090A9A8Dcd712eD6285858ceBef",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_oracle",
              type: "address",
            },
            {
              internalType: "address",
              name: "_registry",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "PolyBetFactory__InvalidCategory",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBetFactory__InvalidExpirationTime",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBetFactory__InvalidInitialLiquidity",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBetFactory__InvalidPercentageToLock",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBetFactory__InvalidProbability",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBetFactory__InvalidQuestion",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "string",
              name: "category",
              type: "string",
            },
          ],
          name: "CategoryAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "marketAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "question",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "category",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "initialLiquidity",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "creationTimestamp",
              type: "uint256",
            },
          ],
          name: "MarketCreated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_category",
              type: "string",
            },
          ],
          name: "addCategory",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_question",
              type: "string",
            },
            {
              internalType: "string",
              name: "_category",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_initialTokenValue",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "_initialYesProbability",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "_percentageToLock",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "_expirationTime",
              type: "uint256",
            },
          ],
          name: "createMarket",
          outputs: [
            {
              internalType: "address",
              name: "marketAddress",
              type: "address",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "getCategories",
          outputs: [
            {
              internalType: "string[]",
              name: "",
              type: "string[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCategoryCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getFactoryInfo",
          outputs: [
            {
              internalType: "address",
              name: "oracle",
              type: "address",
            },
            {
              internalType: "address",
              name: "registry",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "marketCount",
              type: "uint256",
            },
            {
              internalType: "string[]",
              name: "categories",
              type: "string[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMarketCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_oracle",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_registry",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "s_categories",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_marketCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    PolyBetRegistry: {
      address: "0x7a2088a1bFc9d81c55368AE168C2C02570cB814F",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_factory",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "PolyBetRegistry__MarketAlreadyRegistered",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBetRegistry__MarketNotRegistered",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBetRegistry__UnauthorizedAccess",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "factory",
              type: "address",
            },
          ],
          name: "FactorySet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "marketAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "question",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "category",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "createdAt",
              type: "uint256",
            },
          ],
          name: "MarketRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "marketAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
          ],
          name: "MarketStatusUpdated",
          type: "event",
        },
        {
          inputs: [],
          name: "getAllMarkets",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_marketAddress",
              type: "address",
            },
          ],
          name: "getMarketInfo",
          outputs: [
            {
              internalType: "address",
              name: "marketAddress",
              type: "address",
            },
            {
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              internalType: "string",
              name: "question",
              type: "string",
            },
            {
              internalType: "string",
              name: "category",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "createdAt",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_category",
              type: "string",
            },
          ],
          name: "getMarketsByCategory",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_creator",
              type: "address",
            },
          ],
          name: "getMarketsByCreator",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_offset",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_limit",
              type: "uint256",
            },
          ],
          name: "getMarketsPaginated",
          outputs: [
            {
              internalType: "address[]",
              name: "markets",
              type: "address[]",
            },
            {
              internalType: "uint256",
              name: "totalCount",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getRegistryStats",
          outputs: [
            {
              internalType: "uint256",
              name: "totalMarkets",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "activeMarkets",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "factory",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_factory",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_marketAddress",
              type: "address",
            },
            {
              internalType: "address",
              name: "_creator",
              type: "address",
            },
            {
              internalType: "string",
              name: "_question",
              type: "string",
            },
            {
              internalType: "string",
              name: "_category",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_createdAt",
              type: "uint256",
            },
          ],
          name: "registerMarket",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "s_allMarkets",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "s_categoryMarkets",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "s_creatorMarkets",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "s_markets",
          outputs: [
            {
              internalType: "address",
              name: "marketAddress",
              type: "address",
            },
            {
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              internalType: "string",
              name: "question",
              type: "string",
            },
            {
              internalType: "string",
              name: "category",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "createdAt",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_totalMarkets",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_factory",
              type: "address",
            },
          ],
          name: "setFactory",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_marketAddress",
              type: "address",
            },
            {
              internalType: "bool",
              name: "_isActive",
              type: "bool",
            },
          ],
          name: "updateMarketStatus",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  50312: {
    PolyBetFactory: {
      address: "0xa59ca7dD500f8C70f4A3F2166D30E03D0f42F460",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBetFactory__InvalidParameters",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBetFactory__MarketAlreadyExists",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBetFactory__MarketNotFound",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "marketId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "marketAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "question",
              type: "string",
            },
            {
              indexed: true,
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "oracle",
              type: "address",
            },
          ],
          name: "MarketCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [],
          name: "MAX_MARKETS",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_question",
              type: "string",
            },
            {
              internalType: "address",
              name: "_oracle",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_initialTokenValue",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "_initialYesProbability",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "_percentageToLock",
              type: "uint8",
            },
          ],
          name: "createMarket",
          outputs: [
            {
              internalType: "address",
              name: "marketAddress",
              type: "address",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketId",
              type: "uint256",
            },
          ],
          name: "deactivateMarket",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllMarkets",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "marketAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "question",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "creator",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
              ],
              internalType: "struct PolyBetFactory.MarketInfo[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketId",
              type: "uint256",
            },
          ],
          name: "getMarket",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "marketAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "question",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "creator",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
              ],
              internalType: "struct PolyBetFactory.MarketInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMarketCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_creator",
              type: "address",
            },
          ],
          name: "getMarketsByCreator",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "marketAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "question",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "creator",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "createdAt",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
              ],
              internalType: "struct PolyBetFactory.MarketInfo[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "isMarket",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "marketCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "markets",
          outputs: [
            {
              internalType: "address",
              name: "marketAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "question",
              type: "string",
            },
            {
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              internalType: "address",
              name: "oracle",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "createdAt",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
