/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  50312: {
    PolyBet: {
      address: "0x02308D513dA8e27adED9d40EFa0FA5f16c4e0a55",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_oracle",
              type: "address",
            },
            {
              internalType: "address",
              name: "_registry",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBet__AmountMustBeGreaterThanZero",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBet__ETHTransferFailed",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_tradingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_allowance",
              type: "uint256",
            },
          ],
          name: "PolyBet__InsufficientAllowance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_tradingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_userBalance",
              type: "uint256",
            },
          ],
          name: "PolyBet__InsufficientBalance",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBet__InsufficientLiquidity",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "enum PolyBet.Outcome",
              name: "_outcome",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "_amountToken",
              type: "uint256",
            },
          ],
          name: "PolyBet__InsufficientTokenReserve",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBet__InsufficientWinningTokens",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBet__InvalidMarketId",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBet__InvalidPercentageToLock",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBet__InvalidProbability",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBet__MarketExpired",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBet__MarketNotActive",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBet__MarketNotFound",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBet__MustProvideETHForInitialLiquidity",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBet__MustSendExactETHAmount",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBet__OnlyOracleCanReport",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBet__OwnerCannotCall",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBet__PredictionAlreadyReported",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBet__PredictionNotReported",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBet__TokenTransferFailed",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "marketAddress",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "provider",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokensAmount",
              type: "uint256",
            },
          ],
          name: "LiquidityAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "marketAddress",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "provider",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokensAmount",
              type: "uint256",
            },
          ],
          name: "LiquidityRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "marketAddress",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "question",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "category",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "initialLiquidity",
              type: "uint256",
            },
          ],
          name: "MarketCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "marketAddress",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "expirationTime",
              type: "uint256",
            },
          ],
          name: "MarketExpired",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "marketAddress",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "oracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "enum PolyBet.Outcome",
              name: "winningOutcome",
              type: "uint8",
            },
          ],
          name: "MarketReported",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "marketAddress",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "resolver",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "totalEthToSend",
              type: "uint256",
            },
          ],
          name: "MarketResolved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "marketAddress",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "enum PolyBet.Outcome",
              name: "outcome",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethAmount",
              type: "uint256",
            },
          ],
          name: "TokensPurchased",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "marketAddress",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "seller",
              type: "address",
            },
            {
              indexed: false,
              internalType: "enum PolyBet.Outcome",
              name: "outcome",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethAmount",
              type: "uint256",
            },
          ],
          name: "TokensSold",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "marketAddress",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "redeemer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethAmount",
              type: "uint256",
            },
          ],
          name: "WinningTokensRedeemed",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketAddress",
              type: "uint256",
            },
          ],
          name: "addLiquidity",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketAddress",
              type: "uint256",
            },
            {
              internalType: "enum PolyBet.Outcome",
              name: "_outcome",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "_amountTokenToBuy",
              type: "uint256",
            },
          ],
          name: "buyTokensWithETH",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "categoryMarkets",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_question",
              type: "string",
            },
            {
              internalType: "string",
              name: "_category",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_initialTokenValue",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "_initialYesProbability",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "_percentageToLock",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "_expirationTime",
              type: "uint256",
            },
          ],
          name: "createMarket",
          outputs: [
            {
              internalType: "uint256",
              name: "marketAddress",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketAddress",
              type: "uint256",
            },
          ],
          name: "expireMarket",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketAddress",
              type: "uint256",
            },
            {
              internalType: "enum PolyBet.Outcome",
              name: "_outcome",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "_tradingAmount",
              type: "uint256",
            },
          ],
          name: "getBuyPriceInEth",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_category",
              type: "string",
            },
          ],
          name: "getCategoryMarkets",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMarketCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketAddress",
              type: "uint256",
            },
          ],
          name: "getMarketStatus",
          outputs: [
            {
              internalType: "enum PolyBet.MarketStatus",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "bool",
              name: "isExpired",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "timeRemaining",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "canTrade",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketAddress",
              type: "uint256",
            },
          ],
          name: "getPrediction",
          outputs: [
            {
              internalType: "string",
              name: "question",
              type: "string",
            },
            {
              internalType: "string",
              name: "category",
              type: "string",
            },
            {
              internalType: "address",
              name: "oracle",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "initialTokenValue",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "yesTokenReserve",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "noTokenReserve",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isReported",
              type: "bool",
            },
            {
              internalType: "uint8",
              name: "winningOutcome",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "ethCollateral",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "lpTradingRevenue",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "initialProbability",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "percentageLocked",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "expirationTime",
              type: "uint256",
            },
            {
              internalType: "enum PolyBet.MarketStatus",
              name: "status",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketAddress",
              type: "uint256",
            },
            {
              internalType: "enum PolyBet.Outcome",
              name: "_outcome",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "_tradingAmount",
              type: "uint256",
            },
          ],
          name: "getSellPriceInEth",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketAddress",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getUserBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "yesTokens",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "noTokens",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketAddress",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getUserLiquidityInfo",
          outputs: [
            {
              internalType: "uint256",
              name: "userContribution",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalLiquidity",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "hasContribution",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getUserMarkets",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_oracle",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_registry",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "liquidityContributions",
          outputs: [
            {
              internalType: "uint256",
              name: "contribution",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalLiquidity",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "marketCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "markets",
          outputs: [
            {
              internalType: "uint256",
              name: "marketAddress",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              internalType: "string",
              name: "question",
              type: "string",
            },
            {
              internalType: "string",
              name: "category",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "initialTokenValue",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "initialYesProbability",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "percentageLocked",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "expirationTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "ethCollateral",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "yesTokenSupply",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "noTokenSupply",
              type: "uint256",
            },
            {
              internalType: "enum PolyBet.MarketStatus",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "bool",
              name: "isReported",
              type: "bool",
            },
            {
              internalType: "uint8",
              name: "winningOutcome",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "lpTradingRevenue",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketAddress",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "redeemWinningTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketAddress",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_ethToWithdraw",
              type: "uint256",
            },
          ],
          name: "removeLiquidity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketAddress",
              type: "uint256",
            },
            {
              internalType: "enum PolyBet.Outcome",
              name: "_winningOutcome",
              type: "uint8",
            },
          ],
          name: "report",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketAddress",
              type: "uint256",
            },
          ],
          name: "resolveMarketAndWithdraw",
          outputs: [
            {
              internalType: "uint256",
              name: "ethRedeemed",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketAddress",
              type: "uint256",
            },
            {
              internalType: "enum PolyBet.Outcome",
              name: "_outcome",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "_tradingAmount",
              type: "uint256",
            },
          ],
          name: "sellTokensForEth",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userBalances",
          outputs: [
            {
              internalType: "uint256",
              name: "yesTokens",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "noTokens",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userMarkets",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    PolyBetFactory: {
      address: "0x05F6c099A0899830396D6b94b03A8a2EebB8Ef98",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_oracle",
              type: "address",
            },
            {
              internalType: "address",
              name: "_registry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_polyBet",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "PolyBetFactory__InvalidCategory",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBetFactory__InvalidExpirationTime",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBetFactory__InvalidInitialLiquidity",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBetFactory__InvalidPercentageToLock",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBetFactory__InvalidProbability",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBetFactory__InvalidQuestion",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "string",
              name: "category",
              type: "string",
            },
          ],
          name: "CategoryAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "marketAddress",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "question",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "category",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "initialLiquidity",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "creationTimestamp",
              type: "uint256",
            },
          ],
          name: "MarketCreated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_category",
              type: "string",
            },
          ],
          name: "addCategory",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_question",
              type: "string",
            },
            {
              internalType: "string",
              name: "_category",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_initialTokenValue",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "_initialYesProbability",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "_percentageToLock",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "_expirationTime",
              type: "uint256",
            },
          ],
          name: "createMarket",
          outputs: [
            {
              internalType: "uint256",
              name: "marketAddress",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "getCategories",
          outputs: [
            {
              internalType: "string[]",
              name: "",
              type: "string[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCategoryCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getFactoryInfo",
          outputs: [
            {
              internalType: "address",
              name: "oracle",
              type: "address",
            },
            {
              internalType: "address",
              name: "registry",
              type: "address",
            },
            {
              internalType: "address",
              name: "polyBet",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "marketCount",
              type: "uint256",
            },
            {
              internalType: "string[]",
              name: "categories",
              type: "string[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMarketCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_oracle",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_polyBet",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_registry",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "s_categories",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_marketCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    PolyBetRegistry: {
      address: "0xbfaA6EaBFD3891532fFd7C2aD4252f579935dC93",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_factory",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "PolyBetRegistry__MarketAlreadyRegistered",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBetRegistry__MarketNotRegistered",
          type: "error",
        },
        {
          inputs: [],
          name: "PolyBetRegistry__UnauthorizedAccess",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "factory",
              type: "address",
            },
          ],
          name: "FactorySet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "marketAddress",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "question",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "category",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "createdAt",
              type: "uint256",
            },
          ],
          name: "MarketRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "marketAddress",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
          ],
          name: "MarketStatusUpdated",
          type: "event",
        },
        {
          inputs: [],
          name: "getAllMarkets",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketAddress",
              type: "uint256",
            },
          ],
          name: "getMarketInfo",
          outputs: [
            {
              internalType: "uint256",
              name: "marketAddress",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              internalType: "string",
              name: "question",
              type: "string",
            },
            {
              internalType: "string",
              name: "category",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "createdAt",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_category",
              type: "string",
            },
          ],
          name: "getMarketsByCategory",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_creator",
              type: "address",
            },
          ],
          name: "getMarketsByCreator",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_offset",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_limit",
              type: "uint256",
            },
          ],
          name: "getMarketsPaginated",
          outputs: [
            {
              internalType: "uint256[]",
              name: "markets",
              type: "uint256[]",
            },
            {
              internalType: "uint256",
              name: "totalCount",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getRegistryStats",
          outputs: [
            {
              internalType: "uint256",
              name: "totalMarkets",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "activeMarkets",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "factory",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_factory",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketAddress",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_creator",
              type: "address",
            },
            {
              internalType: "string",
              name: "_question",
              type: "string",
            },
            {
              internalType: "string",
              name: "_category",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_createdAt",
              type: "uint256",
            },
          ],
          name: "registerMarket",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "s_allMarkets",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "s_categoryMarkets",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "s_creatorMarkets",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "s_markets",
          outputs: [
            {
              internalType: "uint256",
              name: "marketAddress",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              internalType: "string",
              name: "question",
              type: "string",
            },
            {
              internalType: "string",
              name: "category",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "createdAt",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_totalMarkets",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_factory",
              type: "address",
            },
          ],
          name: "setFactory",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_marketAddress",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "_isActive",
              type: "bool",
            },
          ],
          name: "updateMarketStatus",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  11155111: {
    PredictionMarket: {
      address: "0x0bb30A924B329B0797a7bec197a476b916cAe173",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_liquidityProvider",
              type: "address",
            },
            {
              internalType: "address",
              name: "_oracle",
              type: "address",
            },
            {
              internalType: "string",
              name: "_question",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_initialTokenValue",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "_initialYesProbability",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "_percentageToLock",
              type: "uint8",
            },
          ],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarket__AmountMustBeGreaterThanZero",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarket__ETHTransferFailed",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_tradingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_allowance",
              type: "uint256",
            },
          ],
          name: "PredictionMarket__InsufficientAllowance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_tradingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_userBalance",
              type: "uint256",
            },
          ],
          name: "PredictionMarket__InsufficientBalance",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarket__InsufficientLiquidity",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "enum PredictionMarket.Outcome",
              name: "_outcome",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "_amountToken",
              type: "uint256",
            },
          ],
          name: "PredictionMarket__InsufficientTokenReserve",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarket__InsufficientWinningTokens",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarket__InvalidPercentageToLock",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarket__InvalidProbability",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarket__MustProvideETHForInitialLiquidity",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarket__MustSendExactETHAmount",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarket__OnlyOracleCanReport",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarket__OwnerCannotCall",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarket__PredictionAlreadyReported",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarket__PredictionNotReported",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarket__TokenTransferFailed",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "provider",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokensAmount",
              type: "uint256",
            },
          ],
          name: "LiquidityAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "provider",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokensAmount",
              type: "uint256",
            },
          ],
          name: "LiquidityRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "oracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "enum PredictionMarket.Outcome",
              name: "winningOutcome",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "address",
              name: "winningToken",
              type: "address",
            },
          ],
          name: "MarketReported",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "resolver",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "totalEthToSend",
              type: "uint256",
            },
          ],
          name: "MarketResolved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "enum PredictionMarket.Outcome",
              name: "outcome",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethAmount",
              type: "uint256",
            },
          ],
          name: "TokensPurchased",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "seller",
              type: "address",
            },
            {
              indexed: false,
              internalType: "enum PredictionMarket.Outcome",
              name: "outcome",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethAmount",
              type: "uint256",
            },
          ],
          name: "TokensSold",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "redeemer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethAmount",
              type: "uint256",
            },
          ],
          name: "WinningTokensRedeemed",
          type: "event",
        },
        {
          inputs: [],
          name: "addLiquidity",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "enum PredictionMarket.Outcome",
              name: "_outcome",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "_amountTokenToBuy",
              type: "uint256",
            },
          ],
          name: "buyTokensWithETH",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "enum PredictionMarket.Outcome",
              name: "_outcome",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "_tradingAmount",
              type: "uint256",
            },
          ],
          name: "getBuyPriceInEth",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getPrediction",
          outputs: [
            {
              internalType: "string",
              name: "question",
              type: "string",
            },
            {
              internalType: "string",
              name: "outcome1",
              type: "string",
            },
            {
              internalType: "string",
              name: "outcome2",
              type: "string",
            },
            {
              internalType: "address",
              name: "oracle",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "initialTokenValue",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "yesTokenReserve",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "noTokenReserve",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isReported",
              type: "bool",
            },
            {
              internalType: "address",
              name: "yesToken",
              type: "address",
            },
            {
              internalType: "address",
              name: "noToken",
              type: "address",
            },
            {
              internalType: "address",
              name: "winningToken",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "ethCollateral",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "lpTradingRevenue",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "predictionMarketOwner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "initialProbability",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "percentageLocked",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "enum PredictionMarket.Outcome",
              name: "_outcome",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "_tradingAmount",
              type: "uint256",
            },
          ],
          name: "getSellPriceInEth",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_initialTokenValue",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_initialYesProbability",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_noToken",
          outputs: [
            {
              internalType: "contract PredictionMarketToken",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_oracle",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_percentageLocked",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_yesToken",
          outputs: [
            {
              internalType: "contract PredictionMarketToken",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "redeemWinningTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_ethToWithdraw",
              type: "uint256",
            },
          ],
          name: "removeLiquidity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "enum PredictionMarket.Outcome",
              name: "_winningOutcome",
              type: "uint8",
            },
          ],
          name: "report",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "resolveMarketAndWithdraw",
          outputs: [
            {
              internalType: "uint256",
              name: "ethRedeemed",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "s_ethCollateral",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_isReported",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_lpTradingRevenue",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_question",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_winningToken",
          outputs: [
            {
              internalType: "contract PredictionMarketToken",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "enum PredictionMarket.Outcome",
              name: "_outcome",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "_tradingAmount",
              type: "uint256",
            },
          ],
          name: "sellTokensForEth",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    PredictionMarketTokenNo: {
      address: "0x895Fa090663f7fE93905C1558362a67b7Ba4Dc4A",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "symbol",
              type: "string",
            },
            {
              internalType: "address",
              name: "_liquidityProvider",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "initialSupply",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "allowance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientAllowance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "approver",
              type: "address",
            },
          ],
          name: "ERC20InvalidApprover",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
          ],
          name: "ERC20InvalidReceiver",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSender",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSpender",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarketToken__LiquidityProviderCantTransfer",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarketToken__OnlyPredictionMarketCanBurn",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarketToken__OnlyPredictionMarketCanMint",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "burn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "liquidityProvider",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "predictionMarket",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    PredictionMarketTokenYes: {
      address: "0x8746e43c2c72021D6c5D0052523AF3a4ea747EC1",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "symbol",
              type: "string",
            },
            {
              internalType: "address",
              name: "_liquidityProvider",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "initialSupply",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "allowance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientAllowance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "approver",
              type: "address",
            },
          ],
          name: "ERC20InvalidApprover",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
          ],
          name: "ERC20InvalidReceiver",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSender",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSpender",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarketToken__LiquidityProviderCantTransfer",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarketToken__OnlyPredictionMarketCanBurn",
          type: "error",
        },
        {
          inputs: [],
          name: "PredictionMarketToken__OnlyPredictionMarketCanMint",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "burn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "liquidityProvider",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "predictionMarket",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
